@page
@using Mint.Admin.Pages.Category
@model ActionModel
@{
    ViewData["Title"] = Model.BrandViewModel?.Name ?? "Добавить";
}

<style>
    .scroll-active::-webkit-scrollbar {
        width: 12px;
    }

    .scroll-active::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        border-radius: 10px;
    }

    .scroll-active::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);
    }

</style>

<div class="container scroll-active" style="overflow: auto;">
    <h1>Добавить Бренд</h1>
    <form method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="brandName" class="form-label">Бренд</label>
            <input type="text" class="form-control" name="BrandName" id="brandName" placeholder="Бренд" value="@(Model.BrandViewModel?.Name ?? "")" required />
            <label for="brandFile" class="form-label">Фото для бренда</label>
            <input type="file" class="form-control" name="BrandFile" id="brandFile" required />
        </div>
        @if (Model.BrandViewModel != null)
        {
            @for (int i = 0; i < Model.BrandViewModel.Categories?.Count; i++)
            {
                <div class="card mb-3" id="categoryCard">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        Категории
                        <div>
                            <button class="btn btn-outline-success" id="addCategoryField"><i class="bi bi-plus-square"></i></button>
                            <button class="btn btn-outline-danger" id="removeCategoryField"><i class="bi bi-dash-square"></i></button>
                        </div>
                    </div>
                    <div class="mb-3 px-2">
                        <label for="categoryName" class="form-label">Категория</label>
                        <input class="form-control" list="datalistOptions" name="CategoryName" id="categoryName" value="@(Model.BrandViewModel.Categories[i].Name)" placeholder="Категория">
                        <datalist id="categoryName" data="@ViewBag.Categories"></datalist>
                        <label for="categoryFile" class="form-label" id="categoryFileText">Фото для категории</label>
                        <input type="file" class="form-control" name="CategoryFile" id="categoryFile" required />
                    </div>
                </div>
                <div class="card mb-3" id="subCategoryCard">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        Под категории
                        <div>
                            <button class="btn btn-outline-success" id="addSubCategoryField"><i class="bi bi-plus-square"></i></button>
                            <button class="btn btn-outline-danger" id="removeSubCategoryField"><i class="bi bi-dash-square"></i></button>
                        </div>
                    </div>
                    @for (int j = 0; j < Model.BrandViewModel.Categories[i].SubCategories?.Count; j++)
                    {
                        <div class="mb-3 px-2">
                            <label for="subCategoryName" class="form-label">Под категория</label>
                            <input type="text" class="form-control" name="SubCategoryName" id="subCategoryName" value="@(Model.BrandViewModel.Categories[i].SubCategories?[j].Name)" placeholder="Под категория" required />
                            <label for="subCategoryFile" class="form-label" id="subCategoryFileText">Фото для под категории</label>
                            <input type="file" class="form-control" name="SubCategoryFile" id="subCategoryFile" required />
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <div class="card mb-3" id="categoryCard">
                <div class="card-header d-flex align-items-center justify-content-between">
                    Категории
                    <div>
                        <button class="btn btn-outline-success" id="addCategoryField"><i class="bi bi-plus-square"></i></button>
                        <button class="btn btn-outline-danger" id="removeCategoryField"><i class="bi bi-dash-square"></i></button>
                    </div>
                </div>
                <div class="mb-3 px-2">
                    <label for="categoryName" class="form-label">Категория</label>
                    <input class="form-control" list="@ViewBag.Categories" name="CategoryName" id="categoryName" placeholder="Категория">
                    <datalist id="@ViewBag.Categories">
                        @foreach (var item in ViewBag.Categories)
                        {
                            <option value="@item.Name">@item.Id</option>
                        }
                    </datalist>
                    <label for="categoryFile" class="form-label" id="categoryFileText">Фото для категории</label>
                    <input type="file" class="form-control" name="CategoryFile" id="categoryFile" required />
                </div>
            </div>
            <div class="card mb-3" id="subCategoryCard">
                <div class="card-header d-flex align-items-center justify-content-between">
                    Под категории
                    <div>
                        <button class="btn btn-outline-success" id="addSubCategoryField"><i class="bi bi-plus-square"></i></button>
                        <button class="btn btn-outline-danger" id="removeSubCategoryField"><i class="bi bi-dash-square"></i></button>
                    </div>
                </div>
                <div class="mb-3 px-2">
                    <label for="subCategoryName" class="form-label">Под категория</label>
                    <input type="text" class="form-control" name="SubCategoryName" id="subCategoryName" placeholder="Под категория" required />
                    <label for="subCategoryFile" class="form-label" id="subCategoryFileText">Фото для под категории</label>
                    <input type="file" class="form-control" name="SubCategoryFile" id="subCategoryFile" required />
                </div>
            </div>
        }
        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-primary" style="width: 200px;">
                Сохранить
            </button>
        </div>
    </form>
</div>

<script>

    const addCategoryField = document.querySelector("#addCategoryField");
    const removeCategoryField = document.querySelector("#removeCategoryField");
    const addSubCategoryField = document.querySelector("#addSubCategoryField");
    const removeSubCategoryField = document.querySelector("#removeSubCategoryField");
    const categoryCard = document.querySelector("#categoryCard");
    const subCategoryCard = document.querySelector("#subCategoryCard");

    let i = 1;
    let j = 1;
    let categoryList = [];
    let subCategoryList = [];

    addCategoryField.addEventListener("click", (e) => {
        e.preventDefault();
        console.log("add category");
        createCategoryFields();
    });

    removeCategoryField.addEventListener("click", (e) => {
        e.preventDefault();
        removeLastCategoryField();
    });

    addSubCategoryField.addEventListener("click", (e) => {
        e.preventDefault();
        console.log("add sub category");
        createSubCategoryFields();
    });

    removeSubCategoryField.addEventListener("click", (e) => {
        e.preventDefault();
        removSubCategoryFields();
    });

    function createCategoryFields() {
        var div = document.createElement("div");
        div.className = "mb-3 px-2";
        div.id = "categoryCardId";

        div.appendChild(createLabel("form-label", "Категория", "categoryName" + i));
        div.appendChild(createInput("form-control", "Категория", "CategoryName", "categoryName" + i, "text"));
        div.appendChild(createLabel("form-label", "Фото для Категории", "categoryFile" + i));
        div.appendChild(createInput("form-control", "", "CategoryFile", "categoryFile" + i, "file"));

        categoryCard.appendChild(div);
        categoryList.push(div);
        
        i++;
    }

    function removeLastCategoryField() {
        if (i > 0) {
            categoryCard.removeChild(categoryList[categoryList.length - 1].children[0]);
            i--;
        }
    }

    function createSubCategoryFields() {
        var div = document.createElement("div");
        div.className = "mb-3 px-2";
        div.id = "subCategoryCardId";

        div.appendChild(createLabel("form-label", "Под Категория", "subCategoryName" + i));
        div.appendChild(createInput("form-control", "Под Категория", "SubCategoryName", "subCategoryName" + i, "text"));
        div.appendChild(createLabel("form-label", "Фото для под категории", "subCategoryName" + i));
        div.appendChild(createInput("form-control", "", "SubCategoryFile", "subCategoryFile" + i, "file"));

        subCategoryCard.appendChild(div);
        subCategoryList.push(div);

        j++;
    }

    function removSubCategoryFields() {

    }

    function createInput(className, placeholder, name, id, type) {
        var categoryInput = document.createElement("input");
        categoryInput.className = className;
        categoryInput.placeholder = placeholder;
        categoryInput.name = name;
        categoryInput.id = id;
        categoryInput.type = type;
        categoryInput.required = true;
        return categoryInput;
    }

    function createLabel(className, textContent, htmlFor) {
        var categoryLabel = document.createElement("label");
        categoryLabel.className = className;
        categoryLabel.textContent = textContent;
        categoryLabel.htmlFor = htmlFor;
        return categoryLabel;
    }

</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}